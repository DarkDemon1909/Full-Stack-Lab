**Student Admission Form**

This project is a simple, single-page web application featuring a student admission form. It is built entirely with HTML, CSS, and JavaScript, focusing on robust client-side validation to ensure a good user experience.

The form provides real-time feedback to the user by displaying clear error messages for invalid fields, and shows a success message only when all fields are correctly filled out.

Features
Clean User Interface: A modern, centered, and responsive form layout that works well on different screen sizes.

Comprehensive Client-Side Validation: All form fields are validated using JavaScript before submission.

Dynamic Feedback:

Error messages appear below each field that fails validation.

A success message is displayed after the form is successfully submitted.

User-Friendly Inputs: Utilizes appropriate input types like email and date for better usability.

No Dependencies: Runs directly in the browser with no need for external libraries or frameworks.

Technologies Used
HTML5: For the structure and content of the form.

CSS3: For styling the form, including the layout, colors, and responsive design.

JavaScript : For all the client-side logic, including event handling and form validation.


Code Overview
The entire application is contained within the index.html file.

HTML Structure: The <body> contains a single <div class="form-container"> which holds the <form>. Each form input is wrapped in a <div class="form-group"> and has a corresponding <p class="error-message"> element to display validation errors.

CSS Styling: The <style> tag in the <head> section contains all the CSS rules. It uses Flexbox to center the form on the page and provides a clean, modern aesthetic for all form elements, including hover states for buttons and links.

JavaScript Logic: The <script> tag at the end of the <body> handles the form's functionality:

An event listener is attached to the form's submit event. It calls event.preventDefault() to stop the browser from reloading.

The validateForm() function is the core of the logic. It checks the value of each input against predefined rules. If any rule fails, it sets isValid to false and updates the textContent of the corresponding error message element.

If validateForm() returns true, a success message is displayed, and the form is reset. Otherwise, the error messages remain visible.
